import { BaseResource } from "../resources/base";
export declare class AddressResource extends BaseResource {
    getUtxos({ address }: {
        address: string;
    }): Promise<{
        value: number;
        outpoint: string;
        runes: {
            name: string;
            balance: string;
        }[];
        inscriptions: string[];
    }[]>;
    getInscriptionIds({ address }: {
        address: string;
    }): Promise<string[]>;
    getInscriptions({ address, page }: {
        address: string;
        page?: number;
    }): Promise<{
        inscription_id: string;
        timestamp: string;
        satributes: ("UNCOMMON" | "RARE" | "EPIC" | "LEGENDARY" | "MYTHIC" | "BLACK_UNCOMMON" | "BLACK_RARE" | "BLACK_EPIC" | "BLACK_LEGENDARY" | "BLACK_MYTHIC" | "BLOCK_9" | "BLOCK_78" | "NAKAMOTO" | "FIRST_TX" | "VINTAGE" | "PIZZA" | "HITMAN" | "PALINDROME" | "ALPHA" | "OMEGA")[];
        inscription_number: number;
        content_type: string;
        owner_address: string;
        owner_output: string;
        metadata: string | Record<string, string | number> | null;
        metaprotocol: string | null;
        sat: number;
        content_url: string;
        parent_inscription_id: string | null;
        delegate_inscription_id: string | null;
        submodules: string[];
        genesis_address: string;
        genesis_output: string;
        collection_slug: string | null;
        sats_name: string | null;
        brc20_action: {
            type: "TRANSFER" | "MINT" | "DEPLOY";
            tick: string;
        } | null;
    }[]>;
    getRunes({ address }: {
        address: string;
    }): Promise<{
        name: string;
        balance: string;
    }[]>;
    getBrc20Tokens({ address }: {
        address: string;
    }): Promise<{
        balance: number;
        tick: string;
    }[]>;
    getRareSats({ address }: {
        address: string;
    }): Promise<{
        satributes: ("UNCOMMON" | "RARE" | "EPIC" | "LEGENDARY" | "MYTHIC" | "BLACK_UNCOMMON" | "BLACK_RARE" | "BLACK_EPIC" | "BLACK_LEGENDARY" | "BLACK_MYTHIC" | "BLOCK_9" | "BLOCK_78" | "NAKAMOTO" | "FIRST_TX" | "VINTAGE" | "PIZZA" | "HITMAN" | "PALINDROME" | "ALPHA" | "OMEGA")[];
        ranges: number[][];
    }[]>;
    getInscriptionActivity({ address, type, page, }: {
        address: string;
        type?: "transfer" | "inscribe";
        page?: number;
    }): Promise<{
        type: "INSCRIBE" | "RECEIVE" | "SEND";
        txid: string;
        inscription_id: string;
        timestamp: string;
        spent_as_fee: boolean;
        confirmed: boolean;
        counterpart_address: string | null;
    }[]>;
    getRunesActivity({ address, page, sort, }: {
        address: string;
        page?: number;
        sort?: "oldest" | "newest";
    }): Promise<{
        inputs: {
            rune: string;
            address: string;
            output: string;
            rune_amount: string;
        }[];
        txid: string;
        timestamp: string;
        runestone_messages: {
            type: "TRANSFER" | "MINT" | "ETCH";
            rune: string;
        }[];
        outputs: {
            vout: number;
            rune: string;
            address: string;
            rune_amount: string;
        }[];
    }[]>;
    getBrc20Activity({ address, page, sort, }: {
        address: string;
        page?: number;
        sort?: "oldest" | "newest";
    }): Promise<{
        type: "TRANSFER" | "MINT" | "DEPLOY";
        amount: number;
        ticker: string;
        from_address: string | null;
        to_address: string | null;
        inscription_id: string;
        timestamp: string;
    }[]>;
    getAlkanes({ address }: {
        address: string;
    }): Promise<{
        symbol: string | null;
        id: string;
        name: string | null;
        balance: string;
    }[]>;
    getAlkaneUtxos({ address }: {
        address: string;
    }): Promise<{
        value: number;
        outpoint: string;
        alkanes: {
            symbol: string | null;
            id: string;
            name: string | null;
            balance: string;
        }[];
    }[]>;
}
//# sourceMappingURL=address.d.ts.map